/*
 * wm8978.h		--  codec driver for WM8978
 *
 * Copyright 2009 Guennadi Liakhovetski <g.liakhovetski@gmx.de>
 *
 * This program is free software; you can redistribute it and/or modify
 * it under the terms of the GNU General Public License version 2 as
 * published by the Free Software Foundation.
 */

#ifndef __WM8978_H__
#define __WM8978_H__

/*
 * Register values.
 */
#define WM8978_RESET				0x00
#define WM8978_POWER_MANAGEMENT_1		0x01
#define WM8978_POWER_MANAGEMENT_2		0x02
#define WM8978_POWER_MANAGEMENT_3		0x03
#define WM8978_AUDIO_INTERFACE			0x04
#define WM8978_COMPANDING_CONTROL		0x05
#define WM8978_CLOCKING				0x06
#define WM8978_ADDITIONAL_CONTROL		0x07
#define WM8978_GPIO_CONTROL			0x08
#define WM8978_JACK_DETECT_CONTROL_1		0x09
#define WM8978_DAC_CONTROL			0x0A
#define WM8978_LEFT_DAC_DIGITAL_VOLUME		0x0B
#define WM8978_RIGHT_DAC_DIGITAL_VOLUME		0x0C
#define WM8978_JACK_DETECT_CONTROL_2		0x0D
#define WM8978_ADC_CONTROL			0x0E
#define WM8978_LEFT_ADC_DIGITAL_VOLUME		0x0F
#define WM8978_RIGHT_ADC_DIGITAL_VOLUME		0x10
#define WM8978_EQ1				0x12
#define WM8978_EQ2				0x13
#define WM8978_EQ3				0x14
#define WM8978_EQ4				0x15
#define WM8978_EQ5				0x16
#define WM8978_DAC_LIMITER_1			0x18
#define WM8978_DAC_LIMITER_2			0x19
#define WM8978_NOTCH_FILTER_1			0x1b
#define WM8978_NOTCH_FILTER_2			0x1c
#define WM8978_NOTCH_FILTER_3			0x1d
#define WM8978_NOTCH_FILTER_4			0x1e
#define WM8978_ALC_CONTROL_1			0x20
#define WM8978_ALC_CONTROL_2			0x21
#define WM8978_ALC_CONTROL_3			0x22
#define WM8978_NOISE_GATE			0x23
#define WM8978_PLL_N				0x24
#define WM8978_PLL_K1				0x25
#define WM8978_PLL_K2				0x26
#define WM8978_PLL_K3				0x27
#define WM8978_3D_CONTROL			0x29
#define WM8978_BEEP_CONTROL			0x2b
#define WM8978_INPUT_CONTROL			0x2c
#define WM8978_LEFT_INP_PGA_CONTROL		0x2d
#define WM8978_RIGHT_INP_PGA_CONTROL		0x2e
#define WM8978_LEFT_ADC_BOOST_CONTROL		0x2f
#define WM8978_RIGHT_ADC_BOOST_CONTROL		0x30
#define WM8978_OUTPUT_CONTROL			0x31
#define WM8978_LEFT_MIXER_CONTROL		0x32
#define WM8978_RIGHT_MIXER_CONTROL		0x33
#define WM8978_LOUT1_HP_CONTROL			0x34
#define WM8978_ROUT1_HP_CONTROL			0x35
#define WM8978_LOUT2_SPK_CONTROL		0x36
#define WM8978_ROUT2_SPK_CONTROL		0x37
#define WM8978_OUT3_MIXER_CONTROL		0x38
#define WM8978_OUT4_MIXER_CONTROL		0x39

#define WM8978_CACHEREGNUM			58

/* Clock divider Id's */
enum wm8978_clk_id {
	WM8978_OPCLKRATE,
	WM8978_BCLKDIV,
};

enum wm8978_sysclk_src {
	WM8978_PLL,
	WM8978_MCLK
};


enum playback_path  { PLAYBACK_OFF, RCV, SPK, HP, BT,DUAL, RING_SPK, RING_HP, RING_BT,RING_DUAL};
enum mic_path  	  { MAIN,HP_MIC,SUB, MIC_OFF};
enum power_state	  { CODEC_OFF, CODEC_ON};
enum state			  {OFF, ON};
enum voice_call	  {CALL_OFF,CALL_RCV,CALL_SPK,CALL_HP,CALL_BT};
//AUDIO PATH relative
typedef enum {
	AUDIO_OUT_PATH_HEADPHONE,
	AUDIO_OUT_PATH_SPEAKER,
	AUDIO_OUT_PATH_UNKNOWN
}audio_out_path_type;

typedef void (*select_route)(struct snd_soc_codec *);
typedef void (*select_mic_route)(struct snd_soc_codec *);

/* codec private data */
struct wm8978_priv {
	enum snd_soc_control_type control_type;
	void *control_data;
	unsigned int f_pllout;
	unsigned int f_mclk;
	unsigned int f_256fs;
	unsigned int f_opclk;
	int mclk_idx;
	enum wm8978_sysclk_src sysclk;
	unsigned int codec_playback_state;
	unsigned int codec_mic_state;
	unsigned int voice_call_state;
	select_route *universal_playback_path;
	select_route *universal_voicecall_path;
	select_mic_route *universal_mic_path;
};



struct wm8978_reg_map{
	u16 reg;
	u16 value;
};
static struct wm8978_reg_map wm8978_call_rcv_reg[]={
	{0x00,0x000},{0x01,0x1ff},{0x02,0x1fc},{0x03,0x1fc},  
	{0x04,0x090},{0x05,0x000},{0x06,0x000},{0x07,0x000},  
	{0x08,0x000},{0x09,0x000},{0x0a,0x000},{0x0b,0x1ff},  
	{0x0c,0x1ff},{0x0d,0x000},{0x0e,0x1ff},{0x0f,0x1ff},  
	{0x10,0x1ff},{0x11,0x000},{0x12,0x12c},{0x13,0x02c},  
	{0x14,0x02c},{0x15,0x02c},{0x16,0x02c},{0x17,0x000},  
	{0x18,0x032},{0x19,0x000},{0x1a,0x000},{0x1b,0x000},  
	{0x1c,0x000},{0x1d,0x000},{0x1e,0x000},{0x1f,0x000},  
	{0x20,0x038},{0x21,0x00b},{0x22,0x032},{0x23,0x000},  
	{0x24,0x008},{0x25,0x00c},{0x26,0x093},{0x27,0x0e9},  
	{0x28,0x000},{0x29,0x000},{0x2a,0x000},{0x2b,0x000},  
	{0x2c,0x033},{0x2d,0x1ab},{0x2e,0x1ab},{0x2f,0x000},  
	{0x30,0x000},{0x31,0x00a},{0x32,0x1e1},{0x33,0x1e1},  
	{0x34,0x13f},{0x35,0x13f},{0x36,0x135},{0x37,0x135},  
	{0x38,0x005},{0x39,0x000},			
};
static struct wm8978_reg_map wm8978_call_rcv_hp[]={   
							  
	/*{0x00,0x0000}{0x01,0x001d},{0x02,0x0180},{0x03,0x006f},//0x00 - 0x03			  
	{0x04,0x0010},{0x05,0x0000},{0x06,0x0000},{0x07,0x0000},//0x04- 0x07				
	{0x08,0x0000},{0x09,0x0000},{0x0a,0x0000},{0x0b,0x01ff},//0x08-0xb					
	{0x0c,0x01ff},{0x0d,0x0000},{0x0e,0x0100},{0x0f,0x01ff},//0xc-0xf						
	{0x10,0x01ff},{0x11,0x0000},{0x12,0x012c},{0x13,0x002c},//0x10-0x13 				
	{0x14,0x002c},{0x15,0x002c},{0x16,0x002c},{0x17,0x0000},*///0x14-0x17 		
	/*
	{0x18,0x0032},{0x19,0x0000},{0x1a,0x0000},{0x1b,0x0000},//0x18-0x1b 				
	{0x1c,0x0000},{0x1d,0x0000},{0x1e,0x0000},{0x1f,0x0000},//0x1c-0x1f 				
	{0x20,0x0038},{0x21,0x000b},{0x22,0x0032},{0x23,0x0000},//0x20-0x23 				
	{0x24,0x0018},{0x25,0x0000},{0x26,0x0000},{0x27,0x0000},//0x24-0x27 				
	{0x28,0x0000},{0x29,0x0000},{0x2a,0x0000},{0x2b,0x0000},//0x28-0x2b 			  
	{0x2c,0x0033},{0x2d,0x01d0},{0x2e,0x01d0},{0x2f,0x0100},//0x2c-0x2f  //jerry	
	{0x30,0x0100},{0x31,0x0002},{0x32,0x01e1},{0x33,0x01e1},//0x30-0x33 				
	{0x34,0x012e},{0x35,0x012e},{0x36,0x0139},{0x37,0x0139},//0x34-0x37 	//jerry 
	{0x38,0x0001},{0x39,0x0001},		 //0x38-0x39											  
	*/
#if 0
 {0x00,0x000},{0x01,0x0dd},{0x02,0x1bc},{0x03,0x1ef},//0x00 - 0x03		        
/*{0x04,0x010},{0x05,0x000},{0x06,0x000},{0x07,0x000},//0x04- 0x07			      
{0x08,0x000},{0x09,0x000},{0x0a,0x000},{0x0b,0x1ff},//0x08-0xb				      
{0x0c,0x1ff},{0x0d,0x000},{0x0e,0xfff},{0x0f,0xfff},//0xc-0xf					      
{0x10,0xfff},{0x11,0x000},{0x12,0x12c},{0x13,0x02c},//0x10-0x13 			      
{0x14,0x02c},{0x15,0x02c},{0x16,0x10d},{0x17,0x000},//0x14-0x17 			      
{0x18,0x032},{0x19,0x000},{0x1a,0x000},{0x1b,0x000},//0x18-0x1b 			      
{0x1c,0x000},{0x1d,0x000},{0x1e,0x000},{0x1f,0x000},//0x1c-0x1f 			      
{0x20,0x038},{0x21,0x00b},{0x22,0x032},{0x23,0x000},//0x20-0x23 			      
{0x24,0x008},{0x25,0x00c},{0x26,0x093},{0x27,0x0e9},//0x24-0x27 			      
{0x28,0x000},{0x29,0x000},{0x2a,0x000},{0x2b,0x110},//0x28-0x2b 		        
{0x2c,0x030},{0x2d,0x1ad},{0x2e,0x1ad},{0x2f,0x000},//0x2c-0x2f  //jerry	  
{0x30,0x000},{0x31,0x002},{0x32,0x1e1},{0x33,0x1e1},//0x30-0x33 			      
{0x34,0x13f},{0x35,0x13f},{0x36,0x13c},{0x37,0x13c},//0x34-0x37 	//jerry   
{0x38,0x008},{0x39,0x004}, */			 //0x38-0x39						                    
#endif                                                                            
};                                                                          


#endif	/* __WM8978_H__ */
